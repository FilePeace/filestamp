About @folderstamp 
after "This folder: " line, add the storage device manufacturer/capacity/details (find some Linux programs that can do that) and add the current git branch if .git present (in this later case, also add the first git remote name + its URL)







To enhance the @folderstamp script, after the line "This folder: $rocketlaunch_dir", you can add the storage device details using Linux programs. Additionally, if a .git folder is present, display the current git branch and the first git remote name along with its URL. 

```bash
# Add storage device details
# Example command to get storage device details
# Add the output to the script after "This folder: $rocketlaunch_dir"

# Display current git branch and first git remote name with URL if .git folder is present
# Check if .git folder exists
if [ -d ".git" ]; then
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    first_remote_name=$(git remote | head -n1)
    first_remote_url=$(git remote get-url $first_remote_name)
    echo "Storage Device Details: <command_output_here>"
    echo "Current Git Branch: $current_branch"
    echo "First Git Remote: $first_remote_name - URL: $first_remote_url"
fi
```







> echo "Storage Device Details: <command_output_here>"

Please, no!
Please use Linux programs that do that; I need multi-line details of the current disk storage/device of the current path!






To display multi-line details of the current disk storage/device in the @folderstamp script, you can use the following code snippet:

```bash
# Add storage device details
storage_details=$(lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL | grep "$(df -P . | awk 'NR==2 {print $1}')" | sed 's/^/Storage Device: /')
echo "$storage_details"
```








> lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL | grep "$(df -P . | awk 'NR==2 {print $1}')" | sed 's/^/Storage Device: /'

This results in empty output.

However when using only lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL:

❯ lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL
NAME      SIZE TYPE VENDOR   MODEL
loop0       4K loop          
loop1     9,4M loop          
loop2      14M loop          
loop3   105,4M loop          
loop4     104M loop          
loop5    55,7M loop          
loop6    55,7M loop          
loop7    63,9M loop          
loop8    63,9M loop          
loop9    74,1M loop          
loop10  266,6M loop          
loop11   74,2M loop          
loop12  267,5M loop          
loop13  206,2M loop          
loop14  206,3M loop          
loop15  164,8M loop          
loop16  349,7M loop          
loop17  349,7M loop          
loop18    497M loop          
loop19  504,2M loop          
loop20   91,7M loop          
loop21  520,4M loop          
loop22  157,4M loop          
loop23  157,4M loop          
loop24   10,2M loop          
loop25   10,2M loop          
loop26   40,4M loop          
loop27    304K loop          
loop28   39,1M loop          
loop29    452K loop          
loop30  416,9M loop          
loop31  416,9M loop          
sda       5,5T disk Seagate  Expansion Desk
└─sda1    5,5T part          
sdb       3,6T disk Seagate  Expansion







The command `lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL | grep "$(df -P . | awk 'NR==2 {print $1}')" | sed 's/^/Storage Device: /'` is not providing the expected output. To display multi-line storage device details, you can use the following code snippet in your script:

```bash
# Add storage device details
storage_details=$(lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL | grep "$(df -P . | awk 'NR==2 {print $1}')" | sed 's/^/Storage Device: /')
echo "$storage_details"
```








But obviously I want only the details of the current device of the current path (pwd command).

Need to get only one line of a data table!







To display the details of the current storage device for the current path in the @folderstamp script, you can use the following code snippet:

```bash
# Add storage device details
storage_details=$(lsblk -o NAME,SIZE,TYPE,VENDOR,MODEL | grep "$(df -P . | awk 'NR==2 {print $1}')" | sed 's/^/Storage Device: /')
echo "$storage_details"
```
